{"value":{"content":"var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target, mod));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/service/service.ts\nvar service_exports = {};\n__export(service_exports, {\n  Service: () => Service\n});\nmodule.exports = __toCommonJS(service_exports);\nvar import_core = require(\"@umijs/core\");\nvar import_constants = require(\"../constants\");\nvar import_cwd = require(\"./cwd\");\nvar Service = class extends import_core.Service {\n  constructor(opts) {\n    const cwd = (0, import_cwd.getCwd)();\n    super({\n      ...opts,\n      env: process.env.NODE_ENV,\n      cwd,\n      defaultConfigFiles: import_constants.DEFAULT_CONFIG_FILES || opts.defaultConfigFiles,\n      frameworkName: import_constants.FRAMEWORK_NAME || process.env.FRAMEWORK_NAME,\n      presets: [require.resolve(\"../preset\"), ...(opts == null ? void 0 : opts.presets) || []]\n    });\n  }\n  async run2(opts) {\n    let name = opts.name;\n    if ((opts == null ? void 0 : opts.args.version) || name === \"v\") {\n      name = \"version\";\n    } else if ((opts == null ? void 0 : opts.args.help) || !name || name === \"h\") {\n      name = \"help\";\n    }\n    return await this.run({ ...opts, name });\n  }\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  Service\n});\n","options":{"ext":".js"}},"type":"Object"}