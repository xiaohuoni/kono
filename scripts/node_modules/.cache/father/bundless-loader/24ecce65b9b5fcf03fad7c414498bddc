{"value":{"content":"var __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/inits/package.ts\nvar package_exports = {};\n__export(package_exports, {\n  default: () => package_default\n});\nmodule.exports = __toCommonJS(package_exports);\nvar import_path = require(\"path\");\nvar import_types = require(\"../types\");\nvar package_default = (api) => {\n  api.describe({\n    key: \"inits:pkg\"\n  });\n  api.registerInit({\n    key: \"pkg\",\n    name: \"package\",\n    description: \"\\u521D\\u59CB\\u5316\\u5B50\\u5305\",\n    template: (0, import_path.join)(__dirname, \"..\", \"..\", \"templates\", \"package\"),\n    type: import_types.InitType.init,\n    questions: [\n      {\n        name: \"name\",\n        type: \"text\",\n        message: `What's the package name?`\n      }\n    ]\n  });\n};\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {});\n","options":{"ext":".js"}},"type":"Object"}